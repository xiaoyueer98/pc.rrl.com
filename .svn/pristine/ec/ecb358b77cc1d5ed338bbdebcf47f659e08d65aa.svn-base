<?php

namespace Home\Controller;

use Think\Controller;

class WebchatnewController extends Controller {

        public function __construct() {

                //判断如果不是从微信端访问微信页面则跳转到对应端的首页
                from_to_weixin();
                parent::__construct();
        }

        /*
         * 取出最新的职位
         */

        public function job_list() {


                get_login_time();

                $mOb = D('job');
                $title = $_GET['title'];
                $result = $mOb->new_job_list("0,10", $title);

                $this->assign("title", $title);
                $this->assign("result", $result);
                $this->display();
        }

        /*
         * 得到最新职位列表
         * 
         * 参数  post
         *       page  页码
         *       number  显示条数
         *       
         * 
         * 返回值
         *       count  总条数
         *       result  最新职位列表
         */

        public function get_job_list() {

                $page = $_POST['page'];
                $size = $_POST['number'];
                $title = $_POST['condition'];

                $start = ($page - 1) * $size;

                $mOb = D('job');

                $num = $mOb->new_job_count($title); //得到列表总条数

                $limit = "$start,$size"; //每页的数据数和内容$limit

                $result = $mOb->new_job_list($limit, $title);

                if (empty($result)) {
                        $result = array();
                }
                $data = array(
                    'count' => $num,
                    'result' => $result,
                );

                echo json_encode($data);
        }

        /*
         * 职位详情(新版)
         */

        public function job_detail() {

                import("Org.ThinkSDK.sdk.Jssdk");
                $appid = C("APPID");
                $secretkey = C("SECRETKEY");
                $jssdk = new \Jssdk($appid, $secretkey);
                $signPackage = $jssdk->GetSignPackage();
                $this->assign("appId", $signPackage['appId']);
                $this->assign("timestamp", $signPackage['timestamp']);
                $this->assign("nonceStr", $signPackage['nonceStr']);
                $this->assign("signature", $signPackage['signature']);


                $id = $_GET['jobid'];
                if (empty($id)) {
                        header("location:/Home/Webchatnew/job_list");
                        exit();
                }
                if (!is_numeric($id)) {
                        $jobTmpInfo = M("job")->where("guid='$id'")->find();
                        header("location:/Home/Webchatnew/job_detail/jobid/" . $jobTmpInfo['id']);
                        exit();
                }

                $jobOb = D("job");

                $result = $jobOb->get_detail($id);
                $tag = 0; //默认是未收藏状态
                //判断当前用户是否登陆，如果登陆判断当前页面当前用户是否已藏
                $userinfo = $_COOKIE['userinfo'];
                $userinfoArr = unserialize($userinfo);
                if (!empty($userinfo)) {

                        $username = $userinfoArr['username'];

                        //判断当前页面当前用户是否已藏
                        $jcOb = M("job_collection");
                        $jcArr = $jcOb->where("username='" . $username . "' and status=1 and j_id=" . $id)->find();
                        //echo $jcOb ->getLastSql();
                        //var_dump($jcArr);
                        if (!empty($jcArr)) {
                                $tag = 1; //收藏表里有相关数据，改为已收藏状态
                        }
                }


                //得到热招职位
                $WxComModel = D("company");
                $result_job = $WxComModel->get_hot_job($result['cpid']);
                //得到评论列表
                $arComment = M("evaluate")->where("tag='record' and j_id={$result['id']} and status=0")->select();
                if (empty($arComment)) {
                        $arComment = array();
                }
                foreach ($arComment as $k => $v) {
                        $arComment[$k]['time'] = date("Y-m-d", $v['created_at']);
                }

                $this->assign("tag", $tag);
                $this->assign("result", $result);
                $this->assign("result_job", $result_job);
                $this->assign("arComment", $arComment);
                $this->assign("jobname", $result['title']);
                $this->assign("empty", "<div style='font-size: 14px;color: #b4b4b4;text-align:center;margin-top:10px;'>暂无评论！</div>");

                $this->display("job_detail");
        }

        /*
         * 收藏职位
         */

        public function collect_job() {


                //如果参数为空，跳回职位详情页
                if (empty($_POST)) {
                        setcookie("gourl", "", time() - 1, "/");
                        echo json_encode(array("code" => 500, "msg" => "参数异常"));
                        die;
                }

                //如果为登陆，跳转到login页面，否则查出uid和username字段
                $userinfo = $_COOKIE['userinfo'];
                if (empty($userinfo)) {
                        setcookie("gourl", "/Home/Webchatnew/job_detail/jobid/" . $_POST['j_id'], time() + 3600, "/");
                        echo json_encode(array("code" => 400, "msg" => "未登录"));
                        die;
                } else {
                        setcookie("gourl", "", time() - 1, "/");
                        $userinfoArr = unserialize($userinfo);
                        $_POST['uid'] = $userinfoArr['userid'];
                        $_POST['username'] = $userinfoArr['username'];
                        $_POST['created_at'] = time();
                        $_POST['updated_at'] = time();
                }

                //将收藏信息插入到 收藏职位表 job_collection
                $collectOb = M("job_collection");
                $jcArr = $collectOb->where("username='" . $_POST['username'] . "' and status=2 and j_id=" . $_POST['j_id'])->find();
                if (!empty($jcArr)) {
                        $collect_result = $collectOb->save(array("status" => 1, "updated_at" => time(), "id" => $jcArr['id']));
                } else {
                        $collect_result = $collectOb->add($_POST);
                }
                //echo $collectOb->getLastSql();
                if ($collect_result) {
                        echo json_encode(array("code" => 200, "msg" => "收藏成功"));
                        die;
                } else {
                        echo json_encode(array("code" => 500, "msg" => "收藏失败"));
                        die;
                }
        }

        /*
         * 取消收藏职位
         */

        public function cancel_collect_job() {

                $j_id = $_POST['j_id'];
                //如果为登陆，跳转到login页面，否则查出uid和username字段
                $userinfo = $_COOKIE['userinfo'];
                if (empty($userinfo)) {
                        setcookie("gourl", "/Home/Webchatnew/job_detail/jobid/" . $j_id);
                        echo json_encode(array("code" => 400, "msg" => "未登录"));
                        die;
                } else {
                        setcookie("gourl", "");
                        $userinfoArr = unserialize($userinfo);
                        $uid = $userinfoArr['userid'];
                        $data['updated_at'] = time();

                        //查找该条收藏记录
                        $collectOb = M("job_collection");
                        $jcArr = $collectOb->where("uid='" . $uid . "' and status=1 and j_id=" . $j_id)->find();
                        $data['id'] = $jcArr['id'];
                        $data['status'] = 2;
                        $collect_result = $collectOb->save($data);
                        //echo $collectOb->getLastSql();
                        if ($collect_result) {
                                echo json_encode(array("code" => 200, "msg" => "取消收藏成功"));
                                die;
                        } else {
                                echo json_encode(array("code" => 500, "msg" => "取消收藏失败"));
                                die;
                        }
                }
        }

        /*
         * 取出收藏的职位列表
         */

        public function fav_job() {

                //如果为登陆，跳转到login页面，否则查出uid和username字段
                $userinfo = $_COOKIE['userinfo'];
                if (empty($userinfo)) {
                        setcookie("gourl", "/Home/Webchatnew/fav_job", time() + 3600, "/");
                        header("location:/Home/Webchatlogin/login");
                        die;
                } else {
                        setcookie("gourl", "", time() - 1, "/");
                }

                get_login_time();

                //首先查看这个职位是否已经被删除在job表中
                $WebChatModel = D("JobCollection");

                $userinfoArr = unserialize($userinfo);
                $uid = $userinfoArr['userid'];
                $limit = "0,10"; //每页的数据数和内容$limit
                $result = $WebChatModel->fav_job_list($uid, $limit);

                if (empty($result)) {

                        $result = array();
                }
                $this->assign("result", $result);
                $this->assign("empty", "<div style='font-size: 14px;color: #b4b4b4;text-align:center;margin-top:10px;'>暂无收藏！</div>");
                $this->display("fav_list");
        }

        /*
         * 获取收藏职位列表
         * 
         * 参数  POST
         *      page  页面
         *      number  显示条数
         * 
         * 返回值  json
         * 
         *      count   总条数
         *      result  收藏职位列表
         *     
         */

        public function get_favjob_list() {

                $page = $_POST['page'];
                $size = $_POST['number'];
                $start = ($page - 1) * $size;

                //首先查看这个职位是否已经被删除在job表中
                $WebChatModel = D("JobCollection");

                $userinfo = $_COOKIE['userinfo'];
                $$userinfoArr = unserialize($userinfo);
                $uid = $userinfoArr['userid'];

                $num = $WebChatModel->fav_job_count($uid); //得到列表总条数
                $limit = "$start,$size"; //每页的数据数和内容$limit

                $result = $WebChatModel->fav_job_list($uid, $limit);

                if (empty($result)) {

                        $result = array();
                }
                $data = array(
                    'count' => $num,
                    'result' => $result,
                );

                echo json_encode($data);
        }

        /*
         * 我的账户
         */

        public function my_account() {


                //如果为登陆，跳转到login页面，否则查出uid和username字段
                $userinfo = $_COOKIE['userinfo'];
                if (empty($userinfo)) {
                        setcookie("gourl", "/Home/Webchatnew/my_account", time() + 3600, "/");
                        header("location:/Home/Webchatlogin/login");
                        die;
                } else {
                        setcookie("gourl", "", time() - 1, "/");
                        $userinfoArr = unserialize($userinfo);
                        $username = $userinfoArr['username'];
                        $userinfoOb = M("userinfo");
                        $userArr = $userinfoOb->where("username='" . $username . "'")->find();
                        $uid = $userArr['userid'];
                }
                $limit = "0,10"; //每页的数据数和内容$limit

                $acBObModel = D("AccountBlance");
                $result = $acBObModel->my_account_list($uid, $limit);
                //echo "<pre>";var_dump($result);echo "</pre>";die;
                if (empty($result)) {

                        $result = array();
                }
                $this->assign("result", $result);
                $this->assign("username", $username);
                $this->display("/Webchatnew/my_account");
        }

        /*
         * 获取我的账户列表
         * 
         * 参数   post
         *       page   页码
         *       number 显示条数
         * 
         * 返回值  json
         * 
         *       count  总条数
         *       result 我的账户列表
         */

        public function get_account_list() {

                $page = $_POST['page'];
                $size = $_POST['number'];
                $start = ($page - 1) * $size;

                $acBObModel = D("AccountBlance");
                $userinfo = $_COOKIE['userinfo'];
                $userinfoArr = unserialize($userinfo);
                $username = $userinfoArr['username'];
                $userinfoOb = M("userinfo");
                $userArr = $userinfoOb->where("username='" . $username . "'")->find();
                $uid = $userArr['userid'];

                $num = $acBObModel->my_account_count($uid); //得到列表总条数
                $limit = "$start,$size"; //每页的数据数和内容$limit

                $result = $acBObModel->my_account_list($uid, $limit);

                if (empty($result)) {

                        $result = array();
                }
                $data = array(
                    'count' => $num,
                    'result' => $result,
                );

                echo json_encode($data);
        }

        /*
         *         
         *  判断该用户为该职位已经推荐几个人
         */

        public function checkSelectUser() {


                $userinfo = $_SESSION['userinfo'];
                $userid = $userinfo['userid'];

                $jid = $_POST['jid'];
                $count = M("record")->where("j_id='$jid' and t_id='$userid'")->count();
                echo $count;
        }

        /*
         * 被推荐人列表页
         */

        public function push_resume() {

                $jobid = $_GET['jobid'];

                //如果为登陆，跳转到login页面
                $userinfo = $_COOKIE['userinfo'];
                if (empty($userinfo)) {
                        setcookie("gourl", "/Home/Webchatnew/push_resume/jobid/" . $jobid, time() + 3600, "/");
                        header("location:/Home/Webchatlogin/login");
                        die;
                }
                setcookie("gourl", "", time() - 1, "/");
                $this->assign('jobid', $jobid);

                $userinfoArr = unserialize($userinfo);
                $uid = $userinfoArr['userid'];
                $username = $userinfoArr['username'];

                $resumeOb = D("resume");
                $num = $resumeOb->resume_count($uid); //得到列表总条数


                $limit = "0,10";
                $result = $resumeOb->resume_list($uid, $limit, $jobid);
                foreach ($result as &$arResumeInfo) {
                        
                        $arResumeInfo['isRecord'] = $this->resume_status($arResumeInfo['id'],$jobid);
                }
                $this->assign("result", $result);

                $this->display("candidate_resume");
        }

        /*
         * 判断该候选人的状态
         */
        function resume_status($resumeid,$jobid) {

                //查找公司id
                $arJob = M("job")->where("id=" . $jobid)->find();
                $cid = $arJob['cpid'];
                
                //判断该候选人是否已经推荐给该职位
                $isRecord = M("record")->where("bt_id=" . $resumeid . " AND j_id='$jobid'")->find();
                
                if ($isRecord) {
                        return "disabled";
                } else {
//                                
                        //判断该推荐人是否已经推荐给该企业的一个职位
                        $isThisCompany = M("record")->query("select *  from stj_record where bt_id=" . $resumeid . " and j_id in (select id from stj_job where cpid = $cid) and (audstart=1 or audstart=3 or audstart=5 or audstart=6) and status !=1");
                        if (!empty($isThisCompany)) {
                                return "isthiscompany";
                        } else {
                                //判断该职位是否已经推荐给3家企业
                                $isThreeCompany = M("record")->query("select *  from stj_record  r join stj_job b on  r.j_id = b.id  and r.bt_id =" . $resumeid . "  and (audstart=1 or audstart=3 or audstart=5 or audstart=6) and status !=1 group by  b.cpid;");

                                if (count($isThreeCompany) >= 3) {
                                        return "isthreecompany";
                                }else{
                                        return "";
                                }
                        }
                }
        }

        /*
         * 获取被推荐人列表
         * 
         * 参数  post
         *      jobid  职位id
         *      page   页码
         *      number  显示条数
         * 
         * 返回值 json 格式
         *      
         *        count   总条数
         *        result  被推荐人列表
         *    
         */

        public function get_resume_list() {

                //得到职位信息id
                $jobid = $_POST['jobid'];
                $page = $_POST['page'];
                $size = $_POST['number'];
                $start = ($page - 1) * $size;

                $userinfo = $_COOKIE['userinfo'];
                $userinfoArr = unserialize($userinfo);
                $uid = $userinfoArr['userid'];
                $username = $userinfoArr['username'];

                $resumeOb = D("resume");
                $num = $resumeOb->resume_count($uid); //得到列表总条数

                $limit = "$start,$size";
                $result = $resumeOb->resume_list($uid, $limit, $jobid);
                //var_dump($result);
                if (empty($result)) {

                        $result = array();
                }
                foreach($result as &$v){
                        $v['isRecord'] = $this->resume_status($v['id'],$jobid);
                }
                $data = array(
                    'count' => $num,
                    'result' => $result,
                );

                echo json_encode($data);
        }

        /*
         * 确定面试时间页面
         */

        public function resume_time() {
                if (strpos($_SERVER['HTTP_REFERER'], "push_resume") === false) {
                        header("location:/Home/Webchatnew/job_list");
                }
                //如果为登陆，跳转到login页面
                $userinfo = $_COOKIE['userinfo'];
                if (empty($userinfo)) {
                        header("location:/Home/Webchatlogin/login");
                        die;
                }
                $jobid = $_GET['jobid'];
                $jid = $_GET['jid'];
                
                $status = $this->resume_status($jid,$jobid);
                if(!empty($status)){
                        header("location:/Home/Webchatnew/push_resume/jobid/".$jobid);die;
                }
                
                $this->assign("jobid", $jobid);
                $this->assign("jid", $jid);
                $this->display("set_time");
        }

        /*
         *  保存推荐人信息 到推荐记录表中record 
         */

        public function record_save() {
                if (empty($_POST['j_id']) || !is_numeric($_POST['j_id']) || empty($_POST['bt_id']) || !is_numeric($_POST['bt_id']) || empty($_POST['audstartdate'])) {
                        echo json_encode(array("code" => 500, "msg" => "参数异常"));
                        die;
                }

                $userinfo = $_COOKIE['userinfo'];
                if (empty($userinfo)) {
                        setcookie("gourl", "/Home/Webchatnew/job_detail/jobid/" . $_POST['j_id'], time() + 3600, "/");
                        echo json_encode(array("code" => 400, "msg" => "未登录"));
                        die;
                }
                $userinfoArr = unserialize($userinfo);
                $uid = $userinfoArr['userid'];
                $data['j_id'] = $_POST['j_id'];
                $data['t_id'] = $uid;
                $data['bt_id'] = $_POST['bt_id'];
                $data['posttime'] = time();
                $data['audstartdate'] = $_POST['audstartdate'];

                $arJob = M("job")->where("id=" . $data['j_id'])->find();

                $sJobTitle = $arJob['title'];
                if ($sJobTitle == '0') {
                        $sJobTitle = getCascList($arJob['Jobcate'], "信息不明");
                }
                $data['j_title'] = $sJobTitle;

                $recordOb = M("record");
                $isRecord = $recordOb->where("j_id=" . $data['j_id'] . " and bt_id=" . $data['bt_id'])->find();
                if (!empty($isRecord)) {
                        echo json_encode(array("code" => 500, "msg" => "该简历已经推荐给该职位"));
                        die;
                }
                $re = $recordOb->add($data);
                if ($re) {
                        /*                         * *************【推荐候选人】操作日志 begin******************************** */

                        $username = $userinfoArr['username'];
                        $arResume = M("resume")->where("id=" . $data['bt_id'])->find();
                        $sRecommended = $arResume['username'];  //候选人名称

                        $arCompany = M("company")->where("id=" . $arJob['cpid'])->find();
                        $sCompanyName = $arCompany['cpname']; //公司名称

                        $arNoticeInfo = getTNoticeInfo(1, $sRecommended, $sCompanyName, $sJobTitle);
                        $sLogtitle = $arNoticeInfo[0];
                        $sLogContent = $arNoticeInfo[1];

                        $arNotice = array(
                            "uid" => $uid,
                            "username" => $username,
                            "bt_id" => $data['bt_id'],
                            "j_id" => $data['j_id'],
                            "title" => $sLogtitle,
                            "content" => $sLogContent,
                            "created_at" => time(),
                            "updated_at" => time()
                        );
                        M("notice_log")->add($arNotice);

                        /*                         * *************【推荐候选人】操作日志 end******************************** */

                        echo json_encode(array("code" => "200", "msg" => "保存成功"));
                        die;
                } else {
                        echo json_encode(array("code" => "500", "msg" => "保存失败"));
                        die;
                }
        }

        /*
         * 
         */

        public function saveShareUrl() {
                $urlTmp = explode("share=", $_POST['url']);
                $data = array();

                $data['decrypturl'] = $_POST['url'];
                $url = decrypt($urlTmp[1], "share");

                $username = $_SESSION['userinfo']['username'];

                //如果是分享连接
                if ((strpos($url, "tag") !== false) && (strpos($url, "channel") !== false) && $username) {
                        $userinfo = M("userinfo")->where("username='$username'")->find();
                        $arUrl = explode("&", $url);
                        $shareUrl = array();
                        foreach ($arUrl as $u) {
                                $au = explode("=", $u);
                                $shareUrl[$au[0]] = $au[1];
                        }
                        $shareUrl2 = $urlTmp[0];
                        $shareUrlTmp = "tag=" . $shareUrl['tag'] . "&channel=" . $shareUrl['channel'] . "&aid=" . $shareUrl['aid'] . "&uname=" . $username;
                        $shareUrl2 = $shareUrl2 . $shareUrlTmp;
                        $data['url'] = $shareUrl2;
                        $activeInfo = M("active")->where("id='$shareUrl[aid]'")->find();
                        $data['uid'] = $userinfo['userid'];
                        $data['username'] = $userinfo['username'];
                        $data['tag'] = $shareUrl['tag'];
                        $data['channel'] = $shareUrl['channel'];
                        $data['activeid'] = $shareUrl['aid'];
                        $data['activename'] = $activeInfo['activename'];
                        $data['click'] = 0;
                        $data['num'] = 0;
                        $data['comment'] = '';
                        $data['created_at'] = $data['updated_at'] = time();
                        $isExit = M("share")->where("decrypturl='$_POST[url]' and status=1")->find();

                        if (!$isExit) {
                                M("share")->add($data);
                        }
                }
        }

        function qa() {

                import("Org.ThinkSDK.sdk.Jssdk");
                $appid = C("APPID");
                $secretkey = C("SECRETKEY");
                $jssdk = new \Jssdk($appid, $secretkey);
                $signPackage = $jssdk->GetSignPackage();
                $this->assign("appId", $signPackage['appId']);
                $this->assign("timestamp", $signPackage['timestamp']);
                $this->assign("nonceStr", $signPackage['nonceStr']);
                $this->assign("signature", $signPackage['signature']);

                $arQAlist1 = M("qa")->where("type=1 and status=1")->order("orderid desc,id asc")->select();
                $arQAlist2 = M("qa")->where("type=2 and status=1")->order("orderid desc,id asc")->select();
                $this->assign("arQAlist1", $arQAlist1);
                $this->assign("arQAlist2", $arQAlist2);


                $this->display("qa");
        }
        function upresume_info(){
                
                import("Org.ThinkSDK.sdk.Jssdk");
                $appid = C("APPID");
                $secretkey = C("SECRETKEY");
                $jssdk = new \Jssdk($appid, $secretkey);
                $signPackage = $jssdk->GetSignPackage();
                $this->assign("appId", $signPackage['appId']);
                $this->assign("timestamp", $signPackage['timestamp']);
                $this->assign("nonceStr", $signPackage['nonceStr']);
                $this->assign("signature", $signPackage['signature']);
                
                $this->display();
        }

}
